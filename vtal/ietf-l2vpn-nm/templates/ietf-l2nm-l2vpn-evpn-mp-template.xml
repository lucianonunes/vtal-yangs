<flat-L2vpn xmlns="http://cisco.com/ns/nso/fp/examples/cisco-tsdn-flat-L2vpn">
  <name>{$SERVICE_NAME}</name>

  <?save-context vpn-network-access?>
  <?set-context-node {../..}?>
  <?save-context vpn-node?>
  <?set-context-node {../..}?>

  <?foreach {custom-template}?>
    <custom-template>
      <name>{name}</name>
      <?copy-tree {.}?>
    </custom-template>
  <?end?>

  <service-type>evpn-multipoint</service-type>
  <flat-L2vpn-evpn-multipoint>
    <evi-id>{$EVI_ID}</evi-id>
    <topology when="{svc-topo}">{$TOPOLOGY}</topology>
    <bridge-group>{bridge-group}</bridge-group>
    <vpn-target when="{vpn-target}">
      <root-rt-value when="{vpn-target/hub-rt-value}">{substring-after(vpn-target/hub-rt-value, ":")}</root-rt-value>
      <leaf-rt-value when="{vpn-target/spoke-rt-value}">{substring-after(vpn-target/spoke-rt-value, ":")}</leaf-rt-value>
    </vpn-target>

    <?switch-context vpn-network-access?>

    <?set INTERFACE_ENCAP = '' ?>
    <?set INTERFACE_ID = '' ?>
    <?set INTERFACE_TYPE = '' ?>
    <?set VLAN_ID = '' ?>
    <?set SUB_IF_ID = '' ?>
    <?set PHYSICAL_INF = ''?>

    <?if {connection/encapsulation-type='vpn-common:dot1q'}?>
      <?set INTERFACE_ENCAP = 'dot1q' ?> <!-- dot1q -->
      <?set VLAN_ID = {connection/dot1q-interface/dot1q/c-vlan-id} ?>
      <?set PHYSICAL_INF = {string(connection/dot1q-interface/dot1q/physical-inf)} ?>
    <?end?>
    <?if {connection/encapsulation-type='vpn-common:untagged-int'}?>
      <?set INTERFACE_ENCAP = 'untagged' ?>
      <?set SUB_IF_ID = {connection/untagged-interface/untagged/sub-if-id} ?>
      <?set PHYSICAL_INF = {string(connection/untagged-interface/untagged/physical-inf)} ?>
    <?end?>

    <?if {starts-with($PHYSICAL_INF,'GigabitEthernet')}?>
        <?set INTERFACE_ID = {substring-after($PHYSICAL_INF, 'GigabitEthernet')} ?>
        <?set INTERFACE_TYPE = 'GigabitEthernet' ?>
    <?end?>
    <?if {starts-with($PHYSICAL_INF,'Bundle-Ether')}?>
        <?set INTERFACE_ID = {substring-after($PHYSICAL_INF, 'Bundle-Ether')} ?>
        <?set INTERFACE_TYPE = 'Bundle-Ether' ?>
    <?end?>
    <?if {starts-with($PHYSICAL_INF,'FiftyGigE')}?>
        <?set INTERFACE_ID = {substring-after($PHYSICAL_INF, 'FiftyGigE')} ?>
        <?set INTERFACE_TYPE = 'FiftyGigE' ?>
    <?end?>
    <?if {starts-with($PHYSICAL_INF,'FortyGigE')}?>
        <?set INTERFACE_ID = {substring-after($PHYSICAL_INF, 'FortyGigE')} ?>
        <?set INTERFACE_TYPE = 'FortyGigE' ?>
    <?end?>
    <?if {starts-with($PHYSICAL_INF,'FourHundredGigE')}?>
        <?set INTERFACE_ID = {substring-after($PHYSICAL_INF, 'FourHundredGigE')} ?>
        <?set INTERFACE_TYPE = 'FourHundredGigE' ?>
    <?end?>
    <?if {starts-with($PHYSICAL_INF,'HundredGigE')}?>
        <?set INTERFACE_ID = {substring-after($PHYSICAL_INF, 'HundredGigE')} ?>
        <?set INTERFACE_TYPE = 'HundredGigE' ?>
    <?end?>
    <?if {starts-with($PHYSICAL_INF,'TenGigE')}?>
        <?set INTERFACE_ID = {substring-after($PHYSICAL_INF, 'TenGigE')} ?>
        <?set INTERFACE_TYPE = 'TenGigE' ?>
    <?end?>
    <?if {starts-with($PHYSICAL_INF,'TwentyFiveGigE')}?>
        <?set INTERFACE_ID = {substring-after($PHYSICAL_INF, 'TwentyFiveGigE')} ?>
        <?set INTERFACE_TYPE = 'TwentyFiveGigE' ?>
    <?end?>
    <?if {starts-with($PHYSICAL_INF,'TwoHundredGigE')}?>
        <?set INTERFACE_ID = {substring-after($PHYSICAL_INF, 'TwoHundredGigE')} ?>
        <?set INTERFACE_TYPE = 'TwoHundredGigE' ?>
    <?end?>
    <?if {starts-with($PHYSICAL_INF,'Ethernet')}?>
        <?set INTERFACE_ID = {substring-after($PHYSICAL_INF, 'Ethernet')} ?>
        <?set INTERFACE_TYPE = 'Ethernet' ?>
    <?end?>

    <site>
      <site-name>{../../vpn-node-id}_{id}</site-name>

      <?switch-context vpn-node?>

      <pe>{vpn-node-id}</pe>
      <if-id>{$INTERFACE_ID}</if-id>
      <if-type>{$INTERFACE_TYPE}</if-type>
      <if-encap>{$INTERFACE_ENCAP}</if-encap>
      <multi-home when="{multi-home/esi-value}">
        <esi-value>{multi-home/esi-value}</esi-value>
      </multi-home>
      <leaf when="{node-role='spoke-single-homing'}">single-homing</leaf>
      <leaf when="{node-role='spoke-multi-homing'}">multi-homing</leaf>
      <advertise-mac>
        <enable>{boolean(signaling-options[type='vpn-common:evpn-bgp']/evpn-bgp/mac-learning-mode = 'l2vpn-ntw:control-plane')}</enable>
      </advertise-mac>
      <control-word-disable>{control-word-disable}</control-word-disable>
      <?foreach {signaling-options/evpn-bgp/vpn-target/route-targets}?>
        <vpn-target>
          <rt-value>{substring-after(route-target, ":")}</rt-value>
          <rt-type>{../route-target-type}</rt-type>
        </vpn-target>
      <?end?>
      <sr-te when="{te-service-mapping/te-mapping/odn}">
        <odn>
          <route-policy>{te-service-mapping/te-mapping/odn/route-policy}</route-policy>
          <attach-point>
            <parent-rr-route-policy>{te-service-mapping/te-mapping/odn/attach-point/parent-rr-route-policy}</parent-rr-route-policy>
          </attach-point>
          <?if {signaling-options[type='vpn-common:evpn-bgp']/evpn-bgp/vpn-policies/import-policy and signaling-options[type='vpn-common:evpn-bgp']/evpn-bgp/vpn-policies/export-policy}?>
            <route-policy-type>both</route-policy-type>
          <?else?>
            <route-policy-type when="{signaling-options[type='vpn-common:evpn-bgp']/evpn-bgp/vpn-policies/import-policy}">import</route-policy-type>
            <route-policy-type when="{signaling-options[type='vpn-common:evpn-bgp']/evpn-bgp/vpn-policies/export-policy}">export</route-policy-type>
          <?end?>
        </odn>
      </sr-te>

      <?switch-context vpn-network-access?>

      <split-horizon>
        <enable>{connection/split-horizon/enable}</enable>
      </split-horizon>
      <mtu>{Interface-mtu}</mtu>
      <?if {$INTERFACE_ENCAP='dot1q'}?>
        <vlan-id>{$VLAN_ID}</vlan-id>
        <sub-if-id>{$VLAN_ID}</sub-if-id>
        <?if {connection/dot1q-interface/dot1q/rewrite/ingress}?>
          <rewrite>
            <?copy-tree {connection/dot1q-interface/dot1q/rewrite}?>
          </rewrite>
        <?end?>
      <?end?>
      <?if {$INTERFACE_ENCAP='untagged'}?>
        <sub-if-id>{$SUB_IF_ID}</sub-if-id>
        <?if {connection/untagged-interface/untagged/rewrite/ingress}?>
          <rewrite>
            <?copy-tree {connection/untagged-interface/untagged/rewrite}?>
          </rewrite>
        <?end?>
      <?end?>

      <?switch-context vpn-node?>

      <?foreach {custom-template}?>
        <custom-template>
          <name>{name}</name>
          <?copy-tree {.}?>
        </custom-template>
      <?end?>

    </site>
  </flat-L2vpn-evpn-multipoint>
</flat-L2vpn>
